@using BlazorMonaco.Editor

@if (!string.IsNullOrEmpty(_elementId))
{
    <StandaloneCodeEditor
        CssClass="monaco-editor"
        @ref="_editor"
        Id="@_elementId"
        ConstructionOptions="x => x.HtmlEditorOptions(Html)"/>
}

@code {
    private readonly string _elementId = Guid.NewGuid().ToString("N"); 
    
    [Parameter]
    public string Html { get; set; }

    StandaloneCodeEditor _editor;

    public async Task<string> GetValueAsync()
    {
        return await _editor.GetValue();
    }

    public async Task InsertValueAsync(string value)
    {
        var selection = await _editor.GetSelection();
        var distance = selection.EndColumn - selection.StartColumn;
        selection.CopyTo(out var endSelection);
        endSelection.PositionColumn += value.Length - distance;
        endSelection.EndColumn += value.Length - distance;
        await _editor.ExecuteEdits(
            Guid.NewGuid().ToString(),
            [
                new()
                {
                    ForceMoveMarkers = true,
                    Range = selection,
                    Text = value
                }
            ],
            [endSelection]);
    }
    
    public async Task DisposeAsync()
    {
        await _editor.DisposeEditor();
    }

}